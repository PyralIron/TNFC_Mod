buildscript {
    repositories {
        // Repositories required for ForgeGradle go here.
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "curseforge"
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.0"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'com.wynprice.cursemaven'

// Load properties file, easier to manage versions of required dependencies
file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

if (System.getenv('VERSION') != null) {
    version = System.getenv('VERSION')
} else {
    version = "1.1.3"
}
group = "tnfcmod"
archivesBaseName = "Technodefirmacraft"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"
    mappings = "stable_39"
	
	replace("@VERSION@", project.version)
	replace("@FINGERPRINT@", project.findProperty("signSHA1"))
    replaceIn("tnfcmod.java")
}

repositories {
    // Repositories required for dependencies, not ForgeGradle go here.
    mavenCentral()
       maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
        maven { //Guidebook ffs
        url 'http://dogforce-games.com/maven'
    }
    maven {
        name = "CraftTweaker Maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net/"
    }
        maven {
        name = "ChickenBones Maven"
        url = "http://chickenbones.net/maven/"
    }

    maven { // ModMaven, there is a bunch of stuff on there
        name 'ModMaven'
        url "http://modmaven.k-4u.nl/"
    }
    maven { // Shadowfacts - Forgelin
        name 'Shadowfacts'
        url "http://maven.shadowfacts.net/"
    }
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }

}

String mcVersion = config.minecraft.version
String shortVersion = mcVersion.substring(0, mcVersion.lastIndexOf('.'))
String strippedVersion = shortVersion.replace(".", "") + "0"

dependencies {
    deobfProvided ("CraftTweaker2:CraftTweaker2-MC${strippedVersion}-Main:${config.crafttweaker.version}"){
        exclude group: 'mezz.jei', module:'jei_1.12.2'
        exclude group: 'cofh', module:'RedstoneFlux'
    }
    // deobfCompile ("mezz.jei:jei_${config.minecraft.version}:${config.jei.version}")
    // deobfCompile ("cofh:RedstoneFlux:1.12-2.0.1+:deobf")
    // For now, since maven is no show, use the curse maven plugin to resolve the exact file name


    compile fileTree(include: ["*.jar"], dir: "libs")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", config.version
    inputs.property "mc_version", config.minecraft.version

    // copy mcmod.info from resources
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion variables/placeholders
        expand "mod_version": version, "mc_version": config.minecraft.version
    }

    // copy everything else from resources
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    // from the project root, include the LICENSE file
    from('.') {
        include "LICENSE.txt"
    }


}

// Deobf jar allows people to drop this in mod folder on a dev environment
task deobfJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.output
    classifier "deobf"
}

project.tasks.withType(Jar) { jarTask -> // For all jar tasks
    jarTask.appendix = "MC" + project.minecraft.version
}
